// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Incident type creation flow.
 *
 * - generateIncidentTypes - A function that handles the generation of incident types and documentation requirements.
 * - GenerateIncidentTypesInput - The input type for the generateIncidentTypes function.
 * - GenerateIncidentTypesOutput - The return type for the generateIncidentTypes function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateIncidentTypesInputSchema = z.object({
  incidentTypeDescription: z
    .string()
    .describe('A description of the incident type, including context.'),
});
export type GenerateIncidentTypesInput = z.infer<
  typeof GenerateIncidentTypesInputSchema
>;

const GenerateIncidentTypesOutputSchema = z.object({
  incidentType: z.string().describe('The name of the incident type.'),
  requiredDocumentation: z
    .string()
    .describe('The required documentation for the incident type.'),
});
export type GenerateIncidentTypesOutput = z.infer<
  typeof GenerateIncidentTypesOutputSchema
>;

export async function generateIncidentTypes(
  input: GenerateIncidentTypesInput
): Promise<GenerateIncidentTypesOutput> {
  return generateIncidentTypesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateIncidentTypesPrompt',
  input: {schema: GenerateIncidentTypesInputSchema},
  output: {schema: GenerateIncidentTypesOutputSchema},
  prompt: `You are an administrator creating incident types and specifying required documentation.

  Based on the following incident type description, create an incident type name and specify what documentation will be required.

  Description: {{{incidentTypeDescription}}}
  `,
});

const generateIncidentTypesFlow = ai.defineFlow(
  {
    name: 'generateIncidentTypesFlow',
    inputSchema: GenerateIncidentTypesInputSchema,
    outputSchema: GenerateIncidentTypesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
